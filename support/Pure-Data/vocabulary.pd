#N canvas 9 22 554 716 10;
#X obj 12 12 cnv 15 400 60 empty empty vocabulary 20 12 0 14 -204800
-66577 0;
#X text 30 35 A summary of Pd operators to teach in Intro to Physical
Computing.;
#X text 25 80 This was originally compiled from help-intro.pd from
the "vanilla" Pd 0.45.4 help pages \, from section "5.reference". It
has been selected to emphasize objects most relevant to processing
control-rate sensor data and actuator commands as needed for physical
computing.;
#X obj 26 262 bang;
#X text 126 262 - output a bang message;
#X obj 26 286 float;
#X text 126 286 - store and recall a number;
#X obj 26 310 symbol;
#X text 126 310 - store and recall a symbol;
#X obj 26 334 int;
#X text 126 334 - store and recall an integer;
#X obj 26 358 send;
#X text 126 358 - send a message to a named object;
#X obj 26 382 receive;
#X text 126 382 - catch "sent" messages;
#X obj 26 406 select;
#X text 126 406 - test for matching numbers or symbols;
#X obj 26 430 route;
#X text 126 430 - route messages according to first element;
#X obj 26 454 pack;
#X text 126 454 - make compound messages;
#X obj 26 478 unpack;
#X text 126 478 - get elements of compound messages;
#X obj 26 502 trigger;
#X text 126 502 - sequence and convert messagess;
#X obj 26 526 spigot;
#X text 126 526 - interruptible message connection;
#X obj 26 550 moses;
#X text 126 550 - part a numeric stream;
#X obj 26 574 until;
#X text 126 574 - looping mechanism;
#X obj 26 598 print;
#X text 126 598 - print out messages;
#X obj 26 625 change;
#X text 126 625 - remove repeated numbers from a stream;
#X obj 26 650 swap;
#X text 126 650 - swap two numbers;
#X obj 26 674 value;
#X text 126 674 - shared numeric value;
#X obj 26 768 delay;
#X text 126 768 - send a message after a time delay;
#X obj 26 792 metro;
#X text 126 792 - send a message periodically;
#X obj 26 816 line;
#X text 126 816 - send a series of linearly stepped numbers;
#X obj 26 840 timer;
#X text 126 840 - measure time intervals;
#X obj 26 864 cputime;
#X text 126 864 - measure CPU time;
#X obj 26 888 realtime;
#X text 126 888 - measure real time;
#X obj 26 912 pipe;
#X text 126 912 - dynamically growable delay line for numbers;
#X text 216 972 - arithmetic;
#X text 219 1020 - relational tests;
#X text 220 1067 - bit twiddling;
#X obj 25 996 mod;
#X obj 91 996 div;
#X obj 25 1094 sin;
#X obj 56 1094 cos;
#X obj 87 1094 tan;
#X obj 122 1094 atan;
#X obj 162 1094 atan2;
#X obj 26 1122 sqrt;
#X obj 66 1122 log;
#X obj 97 1122 exp;
#X obj 26 1171 abs;
#X obj 26 1148 random;
#X obj 26 1195 max;
#X obj 58 1195 min;
#X text 222 1195 - greater or lesser of 2 numbers;
#X obj 26 1218 clip;
#X text 222 1218 - force a number into a range;
#X obj 27 1446 tabread;
#X text 127 1446 - read a number from a table;
#X obj 27 1469 tabread4;
#X text 127 1469 - read a number from a table;
#X obj 27 1492 tabwrite;
#X text 127 1492 - write a number to a table;
#X obj 26 1606 key;
#X obj 60 1606 keyup;
#X text 126 1606 - numeric key values from keyboard;
#X obj 26 1629 keyname;
#X text 126 1629 - symbolic key name;
#N canvas 0 50 450 300 (subpatch) 0;
#X restore 24 1335 pd;
#X obj 27 1516 table;
#X obj 24 1359 inlet;
#X obj 24 1383 outlet;
#X text 24 943 ------------------------- MATH -----------------;
#X text 24 747 ------------------------- TIME --------------------------
;
#X obj 28 1021 ==;
#X obj 60 1021 !=;
#X obj 92 1021 >;
#X obj 124 1021 <;
#X obj 155 1021 >=;
#X obj 186 1021 <=;
#X obj 58 973 -;
#X obj 91 973 *;
#X obj 123 973 /;
#X obj 127 1124 pow;
#X obj 26 973 +;
#X obj 26 1067 &;
#X obj 29 1044 &&;
#X obj 59 1067 |;
#X obj 61 1045 ||;
#X obj 57 996 %;
#X obj 26 1241 wrap;
#X text 221 1241 - wrap a number to range [0 \, 1);
#X text 27 241 --------------- GENERAL ----------------;
#X obj 27 722 list;
#X text 127 722 - manipulate lists;
#X text 129 1515 - create a named table;
#X text 19 1420 ----------------- ARRAYS/TABLES -------------------
;
#X text 27 169 The following is a list of built-in objects in Pd. (Not
included in this list are messages \, atoms \, graphs \, etc. which
aren't typed into object boxes but come straight off the "add" menu.)
Right-click (or control-click on a Macintosh) on any object to get
its "help window".;
#X text 215 994 - integer arithmetic;
#X text 219 1044 - logical operators;
#X obj 89 1067 <<;
#X obj 124 1065 >>;
#X text 224 1121 - logarithmic;
#X text 226 1145 - pseudorandom generator;
#X text 224 1170 - absolute value;
#X obj 26 697 loadbang;
#X text 126 697 - bang on load;
#X text 18 1306 --------------- SUBWINDOWS and ABSTRACTIONS ---------------
;
#X text 124 1359 - add an inlet to an abstraction;
#X text 124 1383 - add an outlet to an abstraction;
#X text 124 1335 - define a subwindow (a single-use abstraction);
#X text 22 1581 ----------------- Keyboard Input -------------------
;
#X obj 240 1700 cnv 15 100 60 empty empty canvas 20 12 0 14 -233017
-66577 0;
#X floatatom 27 1702 5 0 0 0 - - -;
#X symbolatom 27 1723 10 0 0 0 - - -;
#X obj 26 1748 bng 15 250 50 0 empty empty empty 17 7 0 10 -262144
-1 -1;
#X obj 73 1702 nbx 5 14 -1e+37 1e+37 0 0 empty empty empty 0 -8 0 10
-262144 -1 -1 0 256;
#X obj 51 1749 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 171 1698 vsl 15 128 0 127 0 0 empty empty empty 0 -9 0 10 -262144
-1 -1 0 1;
#X obj 27 1772 hsl 128 15 0 127 0 0 empty empty empty -2 -8 0 10 -262144
-1 -1 0 1;
#X obj 24 1798 hradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#X obj 196 1701 vradio 15 1 0 8 empty empty empty 0 -8 0 10 -262144
-1 -1 0;
#N canvas 0 22 450 278 (subpatch) 0;
#X array \$0-array 10 float 5;
#A 0 0.100001 0.700015 0.671443 -0.171434 -0.271436 0.100001 -0.557145
-0.585718 0.214301 0;
#X coords 0 1 9 -1 200 140 1;
#X restore 24 1847 graph;
#X text 24 1665 ------- GUI elements (available from Put menu ) -------
;
#X obj 25 1265 expr;
#X text 222 1264 - general arithmetic expressions;
#X text 221 1092 - trigonometric;
