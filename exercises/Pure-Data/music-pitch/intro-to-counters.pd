#N canvas 236 27 930 706 10;
#X obj 37 59 f;
#X obj 85 66 + 1;
#X msg 37 35 bang;
#X floatatom 37 95 5 0 0 0 - - -;
#X obj 207 107 f;
#X obj 255 114 + 1;
#X floatatom 207 143 5 0 0 0 - - -;
#X obj 207 55 metro 200;
#X obj 207 35 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X msg 280 77 0;
#X text 314 78 <- reset;
#X obj 430 80 f;
#X obj 500 87 + 1;
#X floatatom 430 138 5 0 0 0 - - -;
#X obj 430 57 metro 200;
#X obj 430 37 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X obj 500 109 mod 10;
#X text 29 -23 Simple Counters in PD;
#X obj 38 314 t f f;
#X obj 52 396 min;
#X obj 38 369 * -1;
#X obj 38 346 - 1;
#X floatatom 52 442 5 0 0 0 - - -;
#X obj 38 272 mod 20;
#X obj 38 292 / 20;
#X obj 52 420 * 20;
#X obj 38 248 f;
#X obj 86 249 + 1;
#X obj 38 224 metro 200;
#X obj 38 204 tgl 15 0 empty empty empty 17 7 0 10 -262144 -1 -1 0
1;
#X text 85 281 ]--- note that both these values must be DOUBLE the
value you intend to count up to.;
#X text 30 14 1) simplest counter;
#X text 208 15 2) resettable counter;
#X text 430 18 3) count 0->9 and then reset to 0;
#X text 546 108 (note the counter goes to 1 less than the value here)
;
#X text 36 186 4) count up to 10 \, then back down to zero;
#X text 91 421 ]--- this is also doubled.;
#X text 437 213 5) count from zero to a specified value;
#X obj 477 366 f;
#X obj 525 367 + 1;
#X obj 477 325 until;
#X obj 478 294 t f b;
#X msg 531 326 0;
#X text 561 328 (resets counter to zero);
#X msg 441 257 5;
#X msg 474 250 8;
#X msg 509 245 13;
#X obj 477 404 print;
#X text 521 405 (look in the console);
#X text 546 250 if you press 5 \, then you get the first 5 values from
0 ie: 0 \, 1 \, 2 \, 3 \, 4;
#X msg 169 781 \; simpleArray 0 0.5 -0.5 1 0.75 0 0.25 -0.75 -0.25
0.5 1;
#X obj 169 762 loadbang;
#X text 35 494 6) common usage for counters \, reading and writing
to arrays;
#N canvas 0 22 450 300 (subpatch) 0;
#X array simpleArray 10 float 1;
#A 0 0.5 -0.5 1 0.75 0 0.25 -0.75 -0.25 0.5 1;
#X coords 0 1 9 -1 100 70 1;
#X restore 190 559 graph;
#N canvas 0 22 450 300 (subpatch) 0;
#X array newArray 10 float 0;
#X coords 0 1 9 -1 100 70 1;
#X restore 298 559 graph;
#X obj 41 590 f;
#X obj 89 591 + 1;
#X obj 41 562 until;
#X obj 41 539 t f b;
#X msg 94 563 0;
#X msg 41 518 10;
#X obj 41 622 t f f;
#X text 29 -12 ---------------------;
#X obj 50 760 pack 0 0;
#X obj 51 787 s newArray;
#X obj 112 660 tabread simpleArray;
#X obj 121 713 * -1;
#X text 158 715 (invert values);
#X obj 23 -132 cnv 15 600 100 empty empty Simple_Counters_in_Pd 20
12 0 14 -204800 -66577 0;
#X text 66 -96 Examples of many canonical program structures for generating
sequences of integers.;
#X connect 0 0 1 0;
#X connect 0 0 3 0;
#X connect 1 0 0 1;
#X connect 2 0 0 0;
#X connect 4 0 5 0;
#X connect 4 0 6 0;
#X connect 5 0 4 1;
#X connect 7 0 4 0;
#X connect 8 0 7 0;
#X connect 9 0 4 1;
#X connect 11 0 12 0;
#X connect 11 0 13 0;
#X connect 12 0 16 0;
#X connect 14 0 11 0;
#X connect 15 0 14 0;
#X connect 16 0 11 1;
#X connect 18 0 21 0;
#X connect 18 1 19 1;
#X connect 19 0 25 0;
#X connect 20 0 19 0;
#X connect 21 0 20 0;
#X connect 23 0 24 0;
#X connect 24 0 18 0;
#X connect 25 0 22 0;
#X connect 26 0 27 0;
#X connect 26 0 23 0;
#X connect 27 0 26 1;
#X connect 28 0 26 0;
#X connect 29 0 28 0;
#X connect 38 0 39 0;
#X connect 38 0 47 0;
#X connect 39 0 38 1;
#X connect 40 0 38 0;
#X connect 41 0 40 0;
#X connect 41 1 42 0;
#X connect 42 0 38 1;
#X connect 44 0 41 0;
#X connect 45 0 41 0;
#X connect 46 0 41 0;
#X connect 51 0 50 0;
#X connect 55 0 56 0;
#X connect 55 0 61 0;
#X connect 56 0 55 1;
#X connect 57 0 55 0;
#X connect 58 0 57 0;
#X connect 58 1 59 0;
#X connect 59 0 55 1;
#X connect 60 0 58 0;
#X connect 61 0 63 0;
#X connect 61 1 65 0;
#X connect 63 0 64 0;
#X connect 65 0 66 0;
#X connect 66 0 63 1;
